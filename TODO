composer dumpautoload -o
vendor/bin/phpunit --filter testGenerate_isCrazy_association

code coverage (requires xdebug... ugg....): vendor/bin/phpunit --coverage-html coverage



[ ] hash code and save each generated character so that they can be retrieved later; tie to an account

[ ] give user choice points like class of hero, high or low rolls (roller then will scale up/down on rolls), max/min rolls
	[ ] when they make something "sticky" that then remembers the roll for that item and when it rerolls, if that roll was "sticky" then it rolls that again
	[ ] will need to remember rolls and tie them to sticky locations
[ ] crazy or not
[ ] ben: let them "stick" decisions of the results. like keep the bionics stuck, but change out the abilities. or keep strenght the same but redo the rest. this could be really tricky? or just make the classes sticky? how to make bonuses come and go based on sticky?




skills all ahve a base %; do the "Bonus::SET" base percentages BEFORE adding bonuses to character

TO DO
[ ] total bonuses at end of character creation
	[ ] do skill "set" first to get highets possible starting value for a skill
	[ ] do adds for bonuses

[ ] find TODOs
[ ] run unit tests a bunch of times; there are things breaking like # of skills for education seems off by one
[ ] need discussion forum about the generator; messageboard? so that can get feedback


quick roll villain : make a side generator for this
[ ] all heros get 2 attacks
[ ] set age if not already set for hero in final generation

[ ] open id for login and saving heros
[ ] google material for React components

[ ] all heroes get an automatic 2 attacks, some like hunter/vigilante already have that added in?

[ ] selectPowersMutantAlien : mutants need to call this... do they? why aren't they?

[ ] bonuses tallying and end of generation processing