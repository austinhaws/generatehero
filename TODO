composer dumpautoload -o
vendor/bin/phpunit --filter testGenerate_isCrazy_association

[ ] use strategery theme for site, use strategery logo

code coverage (requires xdebug... ugg....): vendor/bin/phpunit --coverage-html coverage


just get it up and working and add saving/locking and other stuff later.


[ ] show base attribute score and add bonuses to get total. can then "stick" the base score


[ ] hash code and save each generated character so that they can be retrieved later; tie to an account

[ ] give user choice points like class of hero, high or low rolls (roller then will scale up/down on rolls), max/min rolls
	[ ] when they make something "sticky" that then remembers the roll for that item and when it rerolls, if that roll was "sticky" then it rolls that again
	[ ] will need to remember rolls and tie them to sticky locations
[ ] crazy or not
[ ] ben: let them "stick" decisions of the results. like keep the bionics stuck, but change out the abilities. or keep strenght the same but redo the rest. this could be really tricky? or just make the classes sticky? how to make bonuses come and go based on sticky?


[ ] generate ccharacters need birthdate and hashcode
[ ] stick abilities and things. just readd them at their values once new character generated

TO DO
quick roll villain : make a side generator for this
[ ] set age if not already set for hero in final generation


[ ] open id for login and saving heros
[ ] google material for React components



to make rolls sticky
[ ] in UI, add "sticky" toggle boxes next to areas/data that can be "stuck"
[ ] if checked then send those roll values to engine to roll
[ ] store all rolls and names on the Hero, or maybe in the roller and returned from generator or stored in generator
[ ] when rolling, can pass in "stuck" rolls and any time the name matches then it uses that roll value

not everything can be sticky, just major decision points like:
- class
- gender
- alignment
-

this is a generator! not a character sheet, so auto calculating data based on changes is too much work and outside of scope.